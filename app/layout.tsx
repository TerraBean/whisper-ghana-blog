import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { ThemeProvider } from "./contexts/ThemeContext";
import { NextAuthSessionProvider } from "./contexts/AuthContext";
import { RootLayoutInner } from "./RootLayoutInner";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};


// **IMPORTANT:** Determine initial theme *server-side*. 
// For simplicity, let's default to 'light' for initial SSR. 
// You might want to implement logic to check user preferences (cookies, etc.) here in a real app.
const initialThemeSSR: 'light' | 'dark' = 'light'; // Or logic to detect initial theme on server

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en" className={`${geistSans.variable} ${initialThemeSSR === 'dark' ? 'dark-theme' : ''}`}>{/* Apply initial theme class to <html> */}
      <NextAuthSessionProvider>
        <ThemeProvider>
          <RootLayoutInner geistMonoVariable={geistMono.variable}>
            {children}
          </RootLayoutInner>
        </ThemeProvider>
      </NextAuthSessionProvider>
    </html>
  );
}
